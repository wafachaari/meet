{"version":3,"sources":["CitySearch.js","Event.js","EventList.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["CitySearch","state","query","suggestions","handleInputChanged","event","value","target","props","locations","filter","location","toUpperCase","indexOf","setState","showSuggestions","undefined","handleItemClicked","suggestion","updateEvents","className","type","this","onChange","onFocus","style","display","map","onClick","Component","Event","show","handledetails","summary","description","EventList","events","id","NumberOfEvents","eventsPerPage","handleLength","number","errorText","placeholder","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","start","window","href","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","history","pushState","pathname","newurl","protocol","host","App","locationEvents","slice","console","log","updateEventCount","eventCount","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.60ca9325.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: []\r\n  }\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      showSuggestions: undefined,\r\n      suggestions,\r\n    });\r\n  };\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n\r\n\r\n<ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  \r\n  state = {\r\n    show: false,\r\n  }\r\n\r\n  handledetails = () => {\r\n    this.setState({\r\n      show: !this.state.show,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const event = this.props.event;\r\n    return (\r\n      <div className=\"Event\">\r\n\r\n        <h1>event</h1>\r\n        <h2> {event.summary}</h2>\r\n        <p>{event.location}</p>\r\n        <button\r\n          className=\"show_btn\"\r\n          onClick={() => this.handledetails()}\r\n        >\r\n          {!this.state.show ? 'Show Details' : 'Hide Details'}\r\n        </button>\r\n        {this.state.show && (\r\n          <div className=\"show_event\">\r\n            <h2> About event:</h2>\r\n            <p>{event.description}</p>\r\n          </div>\r\n        )}\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Event;","\r\nimport React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n\r\n    const events = this.props.events;\r\n    //console.log(events);\r\n    return (\r\n      <div className=\"EventList\">\r\n        <ul className=\"list\">\r\n          {events.map(event =>\r\n            <li key={event.id}>\r\n              <Event event={event} />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EventList;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    eventsPerPage: 6,\r\n  };\r\n\r\n  handleLength = (event) => {\r\n    const number = event.target.value;\r\n    if (number <= 0) {\r\n      this.setState({\r\n        eventsPerPage: number,\r\n        errorText: 'Please select a valid number.'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        eventsPerPage: number,\r\n      });\r\n    }\r\n  //  this.props.updateEventsNumber(number);\r\n  }\r\n\r\n  render() {\r\n    let { eventsPerPage } = this.state;\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n        <h1>choose number</h1>\r\n        <input\r\n          type=\"text\"\r\n          className=\"number\"\r\n          placeholder=\"6\"\r\n          value={eventsPerPage}\r\n          onChange={this.handleLength}\r\n        />\r\n        <ul className=\"numberlist\">\r\n        </ul>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default NumberOfEvents;","const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-21T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-21T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-21T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n];\r\n\r\nexport {mockData};","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    \"https://t9htf5lo2c.execute-api.ca-central-1.amazonaws.com/dev/api/token/\"  + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = \"https://t9htf5lo2c.execute-api.ca-central-1.amazonaws.com/dev/api/get-events/\"  + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n export const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://t9htf5lo2c.execute-api.ca-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};","import React from 'react';\nimport CitySearch from './CitySearch';\nimport './App.css';\nimport EventList from './EventList';\nimport NumberOfEvents from './NumberOfEvents';\n//import Event from './Event';\nimport { Component } from 'react';\nimport \"./nprogress.css\";\n\nimport { getEvents, extractLocations } from './api';\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    eventsPerPage: 6,\n  }\n  componentDidMount() {\n    this.mounted = true;\n    const { eventsPerPage } = this.state;\n\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ \n          events: events.slice(0,eventsPerPage),\n           locations: extractLocations(events)\n        \n        \n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n        const {eventsPerPage} = this.state;\n      this.setState({\n        events: locationEvents.slice(0,eventsPerPage)\n      });console.log(events);\n    });\n    \n  }\n  updateEventCount = eventCount => {\n    \n    this.setState({\n      eventsPerPage: eventCount\n    });\n  \n  }\n\n  render() {   \n    return (\n      \n      <div className=\"App\">\n        <NumberOfEvents eventsPerPage={this.state.eventsPerPage} updateEventCount={this.updateEventCount} />\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}